#!/usr/bin/python
"""sitecustomize.py:

   TO DO: Might make a more gneral osenv 'PATH' setter for more than one path. Especially
          if more dlls are used from other modules.

"""
__author__ = "Michael Fisher"
__date__   = "2012.07.19  12:38:55"


#===============================< IMPORTS >=====================================

#from pymel.all import *
import os
import re
import platform
import sys
import traceback
import posixpath as ppath

import os
osenv = os.environ # Easier to read.

import inspect

#=================================< BODY >======================================


THIS_F_PTH = inspect.getfile(inspect.currentframe())
THIS_F_NAM = os.path.basename(THIS_F_PTH)
THIS_D_PTH = os.path.dirname(THIS_F_PTH)

MAYA_BIN_PTHS    = [r'C:\Program Files\Autodesk\Maya2016\bin', ]
MAYA_APP_D_BRNCH = osenv.get( 'MFROOT', osenv['USERPROFILE'] )
MAYA_APP_D_NAM   = 'MAYA' if 'MFROOT' in osenv else 'maya'

#--------------------< setup_env >-------------------------

#___def setup_env():
#___    """ setup_env - Set up OS env vars for proper launch of Maya through Python.
#___                    Can also be used to set env for anything else.
#___
#___    """
#___    # print("\nBeginning env setup...\n")
#___
#___    osenv['MAYA_LOCATION'] = 'C:\Program Files\Autodesk\Maya2016'
#___    osenv['MAYA_APP_DIR']  =  os.path.join( MAYA_APP_D_BRNCH, MAYA_APP_D_NAM)
#___
#___    #---------------< set the PATH osenv >-------------------------------
#___    # print "Running Prologue Python sitecustomize.py script."
#___
#___    rel_bin_dirs = [ '' 'bin', 'pywin32_system32', 'PyQt4/bin', 'maya', 'maya/api']
#___    abs_bin_pths = [ppath.join(THIS_D_PTH, path) for path in rel_bin_dirs]
#___
#___
#___    # pywin_bin_path = ppath.join( THIS_D_PTH, 'pywin32_system32')
#___    # py_bin_path = ppath.join( THIS_D_PTH, 'bin')
#___    cur_env_paths = []
#___    if platform.system() == 'Windows':
#___        cur_env_paths =  [path for path in re.split(';',osenv['PATH'],) ]
#___    else:
#___        cur_env_paths =  [path for path in re.split(':',osenv['PATH'],) ]
#___
#___    print("\tAppending to system $PATH:\n")
#___    for rel_bin_path in abs_bin_pths:
#___
#___        if rel_bin_path and rel_bin_path not in cur_env_paths:
#___            # print("\t\t{0}".format(rel_bin_path))
#___            # print("path: {0}".format(osenv['PATH']))
#___            osenv['PATH'] += os.pathsep + rel_bin_path
#___
#___    # print("\n\tInserting bin/dll path to front of $PATH:")
#___
#___    for bin_pth in MAYA_BIN_PTHS:
#___        # print("\n\t\t{0}\n\n".format(bin_pth))
#___        osenv['PATH'] = bin_pth  + os.pathsep +  osenv['PATH']
#___
#___
#___    #---------------< Append to Python sys.path  >-------------------------------
#___
#___    #The main Prologue Python dir.
#___    #   It's relative to this sitecustomize file.
#___    toks = filter( None, THIS_D_PTH.split('/') ) # Tokenize the cur script path.
#___    toks.insert( 0, "//" ) # Insert the UNC path string to the list.
#___    py_pipe_root_pth = ppath.join(*toks[0:5]) # Create the Prologue root Python path.
#___    sys.path.append(py_pipe_root_pth)
#___
#___
#___
#___try:
#___    setup_env()
#___except Exception:
#___    # print("The env setup failed to execute.")
#___    exc_type, exc_value, exc_traceback = sys.exc_info()
#___    traceback.print_exception(exc_type, exc_value, exc_traceback, file=sys.stdout)


#==========================< END OF FILE >======================================
